syntax = "proto2";
package kakaIM.Node;

//请求会话ID消息
message RequestSessionIDMessage{

}



//响应会话ID消息
message ResponseSessionIDMessage{
    required string sessionID = 1;//会话ID
    enum Status{
        Success = 1;
        ServerInterlnalError = 2;//服务器内部错误
    }
    required Status status = 2;//状态码
}

//登录消息
message LoginMessage{
    required string sessionID = 1;//会话ID
    required string userAccount = 2;//账户
    required string userPassword = 3;//密码
}

//响应登录消息
message ResponseLoginMessage{
    enum LoginState{
        Success = 1;//登录成功
        Failed = 2;//登录失败
    }

    enum FailureError{
        WrongAccountOrPassword = 1;//帐号或密码错误
        ServerInternalError = 2;//服务器内部错误
    }

    required string sessionID = 1;//会话ID
    required LoginState loginState = 2;//登录状态
    optional FailureError failureError = 3;//错误原因
}

//注册消息
message RegisterMessage {
    required string userAccount = 1; //账户
    required string userPassword = 2; //密码
    optional string userNickName = 3; //昵称

    enum UserSex {
        male = 1; //男生
        female = 2; //女生
        Unkown = 3; //未知
    }

    optional UserSex sex = 4 [default = Unkown]; //用户性别

}

//响应注册消息
message ResponseRegisterMessage{
    enum RegisterState{
        Success = 1;//登录成功
        Failed = 2;//登录失败
    }

    enum FailureError{
        AccountAlreadyExists = 1;//帐号已经存在
        ServerInternalError = 2;//服务器内部错误
    }

    required RegisterState registerState = 1;//注册状态
    optional FailureError failureError = 2;//错误原因
}

//心跳包
message HeartBeatMessage{
    required string sessionID = 1;//会话ID
    required string timestamp = 2;//时间戳
}

//响应心跳包
message ResponseHeartBeatMessage{
    required string sessionID = 1;//会话ID
    required string timestamp = 2;//时间戳
}

//离线消息
message LogoutMessage{
    required string sessionID = 1;//会话ID
    enum OfflineMailState{
        Open = 1;//开启
        Close = 2;//关闭
    }
    optional OfflineMailState offlineMaileState  = 2 [default = Open];//离线邮箱状态
}

//响应离线消息
message ResponseLogoutMessage{
    required string sessionID = 1;//会话ID

    enum OfflineMailState{
        Open = 1;//开启
        Close = 2;//关闭
    }

    optional OfflineMailState offlineMaileState  = 2 [default = Open];//离线邮箱状态
}

//建立好友关系请求消息

message BuildingRelationshipRequestMessage{
    required string sessionID = 1;//会话ID
    optional uint64 applicant_id = 2;//申请ID
    required string sponsorAccount = 3;//发起者ID
    required string targetAccount = 4;//目标用户ID
    required string introduction = 5;//自我介绍
    required string sign = 6;//消息签名
    optional string submissionTime = 7;//提交时间
}

//建立好友关系回复消息

message BuildingRelationshipAnswerMessage{
    required string sessionID = 1;//会话ID
    required uint64 applicant_id = 2;//申请ID
    required string targetAccount = 3;//用户ID
    required string sponsorAccount = 4;//发起者ID

    enum BuildingRelationshipAnswer{
        Accept = 1;//接受
        Reject = 2;//拒绝
    }

    required BuildingRelationshipAnswer answer = 5;//回复
    optional string handleTime = 6;//处理时间
}



//拆除好友关系消息

message DestroyingRelationshipRequestMessage{
    required string sessionID = 1;//会话ID
    required string sponsorAccount = 2;//发起者ID
    required string targetAccount = 3;//用户ID
    optional string sign = 4;//消息签名
}

//拆除好友关系回复消息
message DestoryingRelationshipResponseMessage{
    required string sessionID = 1;//会话ID
    required string sponsorAccount = 2;//发起者ID
    required string targetAccount = 3;//用户ID

    enum DestoryingRelationshipResponse{
        Success = 1;//拆除成功
        ServerInteralError = 2;//服务器内部错误
        IllegalOperation = 3;//非法操作，对方并不是该用户的好友
    }
    required DestoryingRelationshipResponse response = 4;//响应
    optional string sign = 5;//消息签名
}


//请求好友列表消息
message FriendListRequestMessage{
    required string sessionID = 1;//会话ID
    optional uint64 currentVersion = 2;//当前使用的此用户的好友列表的版本，服务器端根据此值来判断是否返回好友列表信息，0表示请求最新的好友饿列表
}

message FriendListItem{
    required string friendAccount = 1;//好友ID
}

//响应好友列表请求消息
message FriendListResponseMessage{
    required string sessionID = 1;//会话ID
    repeated FriendListItem friend = 2;//好友列表
    optional uint64 currentVersion = 3;//服务器端维护的此用户的好友列表的当前版本
}

//在线消息
message OnlineStateMessage{
    required string sessionID = 1;//会话ID
    required string userAccount = 2;//用户ID
    enum OnlineState{
        Online = 1;//在线
        Offline = 2;//离线
        Invisible = 3;//隐身
    }
    required OnlineState userState = 3;//用户状态
}

//拉取好友在线消息
message PullFriendOnlineStateMessage{
    required string sessionID = 1;//会话ID
}

//聊天消息
message ChatMessage{
    required string sessionID = 1;//会话ID
    required string senderAccount = 2;//发送者
    required string receiverAccount = 3;//接受者ID
    required string content = 4;//消息内容
    optional string timestamp = 5;//时间戳
    optional uint64 messageID = 6;//消息ID
    required string sign = 7;//消息签名
}

//视频聊天请求消息
message VideoChatRequestMessage
{
    required string sessionID = 1;//会话ID
    enum ChatType
    {
        Voice = 1;//语音通话
        Video = 2;//音频通话
    }
    required ChatType chatType = 2;//通话类型
    optional uint64 offerID = 3;//提议ID
    optional string sponsorAccount = 4;//发起者ID
    required string targetAccount = 5;//目标用户ID
    optional string sponsorSessionId = 6;//发起者的im会话Id
    optional string timestamp = 7;//时间戳
    required string sign = 8;//消息签名
}

//视频聊天请求取消消息
message VideoChatRequestCancelMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
}

//视频聊天请求答复消息
message VideoChatReplyMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
    optional string sponsorAccount = 3;//发起者ID
    optional string targetAccount = 4;//目标用户ID
    optional string sponsorSessionId = 5;//发起者的im会话Id
    optional string answerSessionId = 6;//接听者所在的im会话Id
    enum VideoChatReply{
        VideoChatReply_Allow = 1;//允许
        VideoChatReply_Reject = 2;//拒绝
        VideoChatReply_NoAnswer = 3;//无响应
    }

    required VideoChatReply reply = 7;//答复
    optional string timestamp = 8;//时间戳
    required string sign = 9;//消息签名
}

//视频聊天提议消息
message VideoChatOfferMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
    required string sessionDescription = 3;//会话描述符信息
}

//视频聊天应答消息
message VideoChatAnswerMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
    required string sessionDescription = 3;//会话描述符信息
}

//视频聊天协商响应消息
message VideoChatNegotiationResultMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
    enum NegotiationResult{
        NegotiationResult_Success = 1;//协商成功
        NegotiationResult_Failed = 2;//协商失败
    }
    required NegotiationResult result = 3;
}

//候选项消息
message VideoChatCandidateAddressMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
    required string fromSessionId = 3;
    required string sdpMid = 4;
    required int64 sdpMLineIndex = 5;
    required string SDP_ized_description = 6;//sdp格式的描述
}

//视频聊天结束消息
message VideoChatByeMessage
{
    required string sessionID = 1;//会话ID
    required uint64 offerID = 2;//提议ID
}

//通知消息

message NotificationMessage{
    enum NotificationMessageType{
        SystemNotificationMessageType = 1;//系统通知
    }

    required NotificationMessageType type = 1;//通知类型
    optional uint64 messageID = 2;//消息ID
}

//拉取聊天消息

message PullChatMessage{
    required string sessionID = 1;//会话ID
    //拉取在messageID之后的消息
    required uint64 messageID = 2;//消息ID
}

//获取用户电子名片消息

message FetchUserVCardMessage
{
    required string sessionID = 1;//会话ID
    required string userID = 2;//用户ID
    optional string currentVersion = 3;//客户端所持有的此用户的电子名片的版本，0表示希望获取最新版本
}

enum UserGenderType
{
    Male =1;//男
    Female = 2;//女
    Unkown = 3;//未知
}

message UserVCardResponseMessage
{
    required string sessionID = 1;//会话ID
    required string userID = 2;//用户ID
    optional string nickname = 3;//昵称

    optional UserGenderType gender = 4;//性别
    optional string mood = 5;//心情
    optional bytes avator = 6;//头像
    optional string currentVersion = 7;//服务器所持有的此用户的电子名片的版本
}

message UpdateUserVCardMessage
{
    required string sessionID = 1;//会话ID
    optional string nickname = 2;//昵称
    optional UserGenderType gender = 3;//性别
    optional string mood = 4;//心情
    optional bytes avator = 5;//头像
}

message UpdateUserVCardMessageResponse
{
    required string sessionID = 1;//会话ID

    enum UpdateUserVCardStateType
    {
        Success = 1;//更新成功
        Failure = 2;//更新失败
    }

    required UpdateUserVCardStateType state = 2;//更新操作执行结果
}

//创建聊天群

message ChatGroupCreateRequest
{
    required string sessionID = 1;//会话ID
    required string groupName  = 2;//群组名称
    required string groupDescrption  = 3;//群组描述
    optional string sign = 4;//请求签名
}

message ChatGroupCreateResponse
{

    required string sessionID = 1;//会话ID
    enum ChatGroupCreateResponseResult
    {
        Success = 1;//创建成功
        Failed = 2;//创建失败
    }
    required ChatGroupCreateResponseResult result  = 2;//响应结果
    optional string groupId  = 3;//群组Id
    optional string sign = 4;//请求签名
}

//解散聊天群

message ChatGroupDisbandRequest
{
    required string sessionID = 1;//会话ID
    required string groupId  =2;//群组Id
    required string operatorId  = 3;//操作员
    optional string sign = 4;//请求签名
}

message ChatGroupDisbandResponse
{
    required string sessionID = 1;//会话ID
    required string groupId = 2;//群组Id
    required string operatorId  = 3;//操作员
    enum ChatGroupDisbandResponseResult
    {
        Success = 1;//解散成功
        Failed = 2;//解散失败
    }
    required ChatGroupDisbandResponseResult result  = 4;//响应结果
    optional string sign = 5;//请求签名
}

//加入聊天群
message ChatGroupJoinRequest
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;//群组id
    required string userAccount  = 3;//用户ID
    optional string operatorId  = 4;//操作员
    optional string introduction = 5;//自我介绍
    optional uint64 applicant_id = 6;//申请ID
    required string sign = 7;//签名
    optional string submissionTime = 8;//提交时间
}

message ChatGroupJoinResponse
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;//群组id
    required string userAccount  = 3;//用户ID
    enum ChatGroupJoinResponseResult
    {
        Allow = 1;//成功加入聊天群
        Reject = 2;//拒绝加入聊天群
        ServerInternalError = 3;//服务器内部错误
        InfomationNotMatch = 4;//信息不匹配
        AuthorizationNotMath = 5;//权限不匹配
    }
    required ChatGroupJoinResponseResult result  = 4;//响应结果
    optional uint64 applicant_id = 5;//申请ID
    optional string operatorId  = 6;//操作员
}

//退出群组

message ChatGroupQuitRequest
{
    required string sessionID = 1;//会话ID
    required string userAccount  = 2;//待退出的用户
    required string groupId  = 3;//群组id
    optional string operatorId  = 4;//操作员
    optional string sign = 5;//签名
}

message ChatGroupQuitResponse
{
    required string sessionID = 1;//会话ID
    required string userAccount  = 2;//用户Id
    required string groupId  = 3;//群组id
    enum ChatGroupQuitResponseResult
    {
        Success = 1;//退出群组成功
        Failed = 2;//退出群组失败
    }
    required ChatGroupQuitResponseResult result = 4;//退出操作处理结果
    optional string operatorId = 5 ;//操作员
    optional string sign = 6;//签名
}

//更新群信息

message UpdateChatGroupInfoRequest
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;
    required string groupName  =3;
    required string groupDescrption  = 4;
    optional string sign = 5;//签名
}

message UpdateChatGroupInfoResponse
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;
    enum UpdateChatGroupInfoResponseResult
    {
        Success = 1;
        Failed = 2;
        ServerInternalError = 3;//服务器内部错误
        InfomationNotMatch = 4;//信息不匹配
        AuthorizationNotMath = 5;//权限不匹配
    }
    required UpdateChatGroupInfoResponseResult result  = 4;
    optional string operator  = 3;
    optional string sign = 5;//签名
}

//获取群信息

message FetchChatGroupInfoRequest
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;//群组Id
}

message FetchChatGroupInfoResponse
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;
    enum FetchChatGroupInfoResponseResult
    {
        Success = 1;
        Failed = 2;
    }
    required FetchChatGroupInfoResponseResult result  = 3;
    optional string groupName  =4;
    optional string groupDescrption  = 5;
    optional string groupMaster = 6;
}

//获取群成员列表

message FetchChatGroupMemberListRequest
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;//群Id
    optional string sign = 3;//签名
}

message FetchChatGroupMemberListResponse
{
    required string sessionID = 1;//会话ID
    required string groupId  = 2;
    enum FetchChatGroupMemberListResponseResult
    {
        Success = 1;
        Failed = 2;
    }
    required FetchChatGroupMemberListResponseResult result  = 3;
    message ChatGroupMemberInfo
    {
        required string userAccount  = 1;
        optional string groupNickName  = 2;
    }
    repeated ChatGroupMemberInfo groupMember  = 4;
    optional string sign = 5;//签名
}

//获取用户所加入的群组

message FetchChatGroupListRequest
{
    required string sessionID = 1;//会话ID
}
message FetchChatGroupListResponse
{
    required string sessionID = 1;//会话ID
    message GroupInfo
    {
        required string groupId  = 1;
        required string groupName  = 2;
    }
    repeated GroupInfo group  = 2;
}


//群消息
message GroupChatMessage
{
    required string sessionID = 1;//会话ID
    required string sender  = 2;//发送者账号
    required string groupId  = 3;//群ID
    required string content  = 4;//消息内容
    optional uint64 msgId = 5;//消息Id
    optional string timestamp = 6;//时间戳
    required string sign = 7;//消息签名
}

//拉取群消息
message PullGroupChatMessage
{
    required string sessionID = 1;//会话ID
    required string groupID = 2;//群ID
    //拉取在messageID之后的消息
    required uint64 messageID = 3;//消息ID
}
